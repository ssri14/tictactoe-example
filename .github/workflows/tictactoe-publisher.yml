name: Tic Tac Toe CI/CD
on:
  push:
    # Uncomment if we want to run workflows on branches too
    # branches:
    #   - main
    tags:
      - 'v*'
permissions: # Explicitly define permissions for the GITHUB_TOKEN
  contents: write # This permission is necessary for creating releases
  packages: write
jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # Use the latest version
        with:
          fetch-depth: 0 # Ensures all history is fetched for tag creation
      - name: Set up JDK 11
        uses: actions/setup-java@v3 # Use the latest version
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Test with Maven
        run: mvn test
      - name: Create Release
        id: create_release # Ensure this ID is set
        uses: actions/create-release@v1 # Consider looking for newer versions or alternatives if available
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }} # Use the short tag name
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Find JAR file
        id: set_jar_path
        run: |
          JAR_FILE=$(find ./target -name '*complete*.jar' | head -n 1)
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV
          echo "::set-output name=jar_path::$JAR_FILE"
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This reference is important
          asset_path: ${{ steps.set_jar_path.outputs.jar_path }}
          asset_name: tictactoe-${{ github.ref_name }}.jar
          asset_content_type: application/java-archive
